name: Build Windows Release

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  create:
    tags:
      - 'v*'

jobs:
  build-windows:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: '6.6.1'
        host: 'windows'
        target: 'desktop'
        arch: 'win64_msvc2019_64'
        modules: 'qt5compat qtmultimedia'
        cache: true

    - name: Setup MSVC
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x64

    - name: Configure CMake
      run: |
        mkdir build
        cd build
        cmake .. -G "NMake Makefiles" -DCMAKE_BUILD_TYPE=Release

    - name: Build
      run: |
        cd build
        nmake

    - name: Deploy Qt dependencies
      run: |
        cd build
        windeployqt.exe SQL_LOGIN.exe --release --no-translations

    - name: Copy MySQL plugin
      continue-on-error: true
      shell: pwsh
      run: |
        $qtPath = $env:Qt6_DIR
        $sqlDriversSource = "$qtPath/plugins/sqldrivers"
        $sqlDriversDest = "build/sqldrivers"

        if (Test-Path $sqlDriversSource) {
          New-Item -ItemType Directory -Force -Path $sqlDriversDest
          if (Test-Path "$sqlDriversSource/qsqlmysql.dll") {
            Copy-Item "$sqlDriversSource/qsqlmysql.dll" -Destination $sqlDriversDest
            Write-Host "MySQL plugin copied successfully"
          }
        }

    - name: Create README
      shell: pwsh
      run: |
        $content = "Sistema de Ventas - Windows Portable`n"
        $content += "======================================`n`n"
        $content += "REQUISITOS:`n"
        $content += "- Windows 10 o superior`n"
        $content += "- Conexion a Internet`n`n"
        $content += "INSTRUCCIONES:`n"
        $content += "1. Extraer el ZIP`n"
        $content += "2. Ejecutar SQL_LOGIN.exe`n"
        $content += "3. Ingresar credenciales`n`n"
        $content += "No requiere instalacion ni permisos de administrador.`n"
        $content | Out-File -FilePath "build/README.txt" -Encoding UTF8

    - name: Create launcher
      shell: pwsh
      run: |
        $batch = "@echo off`r`n"
        $batch += "title Sistema de Ventas`r`n"
        $batch += "echo Iniciando...`r`n"
        $batch += "SQL_LOGIN.exe`r`n"
        $batch += "if errorlevel 1 pause`r`n"
        $batch | Out-File -FilePath "build/Ejecutar.bat" -Encoding ASCII -NoNewline

    - name: Package portable version
      shell: pwsh
      run: |
        cd build
        $exclude = @('*.cpp', '*.h', '*.obj', 'CMakeFiles', '*.cmake', 'Makefile')
        Get-ChildItem | Where-Object { $_.Name -notin $exclude -and $_.Name -notlike 'CMake*' } | Compress-Archive -DestinationPath ../SistemaVentas-Windows-Portable.zip

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: SistemaVentas-Windows
        path: SistemaVentas-Windows-Portable.zip
        retention-days: 90
